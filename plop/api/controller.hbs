'use strict';

import {{properCase name}} from './{{name}}.model';
import createError from 'http-errors';
import _ from 'lodash';

// Get list of {{plur name}}
export function index (req, res) {
  return {{properCase name}}.find({});
}

// Get a single {{name}}
export function show (req, res) {
  return {{properCase name}}.findById(req.params.id)
    .then({{name}} => {
      if (!{{name}}) {
        return Promise.reject(createError(404));
      }

      return ({{name}});
    });
}

// Creates a new {{name}}
export function create (req, res) {
  return new{{properCase name}}.save()
    .then({{name}} => {
      if (!{{name}}) {
        return Promise.reject(createError(404));
      }

      return {{name}};
    });
}

// Update a {{name}}
export function update (req, res) {
  const data = _.pick(req.body, ['name']);

  return {{properCase name}}.findById(req.params.id)
    .then({{name}} => {
      if (!{{name}}) {
        return res.status(404).end();
      }

      {{name}}.set(data);

      return {{name}}.save();
    })
    .then(_.noop);
}

// Deletes a {{name}}
export function destroy (req, res) {
  return {{properCase name}}.findOneAndRemove({_id: req.params.id})
    .then({{name}} => {
      if (!{{name}}) {
        res.status(404).end();
      }
    });
}
